@page "/ResourceStats"

@using DTOs.ProjectDTOs
@using DTOs.ResourceDTOs
@using Service
@inject SessionService Session
@inject ProjectService ProjectService
@inject ResourceService ResourceService

<h3>Resource Stats</h3>

@if (_userProjects.Any())
{
    <select id="project" class="form-control mb-3" @bind="SelectedProjectId" required>
        <option value="0" disabled selected>-- Select a project --</option>
        @foreach (var project in _userProjects)
        {
            <option value="@project.Id">@project.Name</option>
        }
    </select>
}
else
{
    <p class="text-muted">No projects found for the current user.</p>
}

@if (_resourceStatsDto.Any())
{
    <table class="table table-striped">
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Type</th>
            <th>Quantity</th>
            <th>Task</th>
            <th>Usage Period</th>
            <th>Usage Level</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var resource in _resourceStatsDto)
        {
            <tr>
                <td>@resource.Name</td>
                <td>@resource.Description</td>
                <td>@resource.Type</td>
                <td>@resource.Quantity</td>
                <td>@resource.TaskName</td>
                <td>@resource.UsagePeriod</td> 
                <td>
                    <div class="progress">
                        <div class="progress-bar" role="progressbar"
                             style="width:@resource.UsageLevel%"
                             aria-valuenow="@resource.UsageLevel" aria-valuemin="0" aria-valuemax="100">
                            @resource.UsageLevel%
                        </div>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <p>No resource data found for this project.</p>
}

@code {
    private List<GetProjectDTO> _userProjects = new();
    private int _selectedProjectId;
    private List<ResourceStatsDto> _resourceStatsDto = new();

    private int SelectedProjectId
    {
        get => _selectedProjectId;
        set
        {
            _selectedProjectId = value;
            OnProjectChanged(value);
        }
    }

    protected override void OnInitialized()
    {
        if (Session.IsLoggedIn())
        {
            _userProjects = ProjectService.GetAllProjectsByUserEmail(Session.CurrentUser.Email);
        }
    }

    private void OnProjectChanged(int projectId)
    {
            try
            {
                _resourceStatsDto = ResourceService.GetResourceStatsByProject(projectId);
                Console.WriteLine($"Stats para project {projectId}: {_resourceStatsDto.Count} recursos encontrados");
                foreach (var r in _resourceStatsDto)
                {
                    Console.WriteLine($" - {r.Name}, {r.Quantity}");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error al cargar recursos: {ex.Message}");
                _resourceStatsDto = new(); 
            }
        
    }
}
