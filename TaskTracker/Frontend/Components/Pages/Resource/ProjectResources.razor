@page "/ProjectResources/{projectId:int}"
@using Domain
@using DTOs.ProjectDTOs
@using Service

@inject ProjectService ProjectService
@inject SessionService Session
@inject NavigationManager Navigation

<h3>Project Resources</h3>

@if (_project == null)
{
    <p>Loading...</p>
}
else
{
    @foreach (var task in _project.Tasks)
    {
        <h5>Task: @task.Title</h5>
        <ul>
            @foreach (var taskResource in task.Resources)
            {
                <li>
                    <b>@taskResource.Resource.Name</b> - @taskResource.Resource.Description <br />
                    Needed: @taskResource.Quantity

                    @if (taskResource.Quantity > 0)
                    {
                        <button class="btn btn-sm btn-success mt-1" @onclick="() => AssignResource(task.Title, taskResource.Resource.Name)">
                            Assign to me
                        </button>
                    }
                    else
                    {
                        <span class="text-danger">Not available</span>
                    }
                </li>
            }
        </ul>
    }
}

@code {
    [Parameter] public int projectId { get; set; }

    private Project _project;

    protected override void OnInitialized()
    {
        _project = ProjectService.GetProject(new GetProjectDTO { Id = projectId });
    }

    private void AssignResource(string taskTitle, string resourceName)
    {
        var task = _project?.Tasks.FirstOrDefault(t => t.Title == taskTitle);
        if (task != null)
        {
            TaskResource taskResource = task.Resources.FirstOrDefault(tr => tr.Resource.Name == resourceName);
            if (taskResource != null && taskResource.Quantity > 0)
            {
                taskResource.Quantity -= 1;
            
                ProjectService.DecreaseResourceQuantity(projectId, resourceName);
            
                _project = ProjectService.GetProject(new GetProjectDTO { Id = projectId });
            }
        }
    }

}
