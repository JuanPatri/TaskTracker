@page "/ViewTaskFromProyect/{projectId:int}"
@using Backend.Domain
@using Backend.Domain.Enums
@using Backend.DTOs.ProjectDTOs
@using Backend.Service
@using Task = Backend.Domain.Task
@inject ProjectService ProjectService
@using Backend.Domain.Enums 


<h3>View Tasks from project: @project?.Name</h3>

@if (!string.IsNullOrEmpty(_errorMessage))
{
<div class="alert alert-danger">
    <strong>Error:</strong> @_errorMessage
</div>
}
else if (project == null)
{
    <p class="text-danger">Project not found.</p>
}
else if (project.Tasks.Count == 0)
{
    <p>No tasks found for this project.</p>
}
else
{
    <div class="alert alert-warning">
        <strong>Estimated Finish:</strong> @project.EstimatedFinish.ToShortDateString()
    </div>

    <div class="alert alert-info">
        <strong>Critical Path:</strong>
        @if (project.CriticalPathTitles.Any())
        {
            @foreach (var title in project.CriticalPathTitles)
            {
                <span>@title</span>
                @if (title != project.CriticalPathTitles.Last())
                {
                    <span> â†’ </span>
                }
            }
        }
        else
        {
            <span>Not available</span>
        }
    </div>

    <table class="table table-bordered table-striped">
        <thead>
        <tr>
            <th>Title</th>
            <th>Duration (days)</th>
            <th>Status</th>
            <th>Early Start</th>
            <th>Early Finish</th>
            <th>Late Start</th>
            <th>Late Finish</th>
            <th>Slack (days)</th>
            <th>Date Completed</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var task in project.Tasks)
        {
            <tr>
                <td>@task.Title</td>
                <td>@task.Duration</td>
                <td>@task.Status</td>
                <td>@task.EarlyStart.ToShortDateString()</td>
                <td>@task.EarlyFinish.ToShortDateString()</td>
                <td>@task.LateStart.ToShortDateString()</td>
                <td>@task.LateFinish.ToShortDateString()</td>
                <td>@(task.LateStart.Subtract(task.EarlyStart).Days)</td>
                <td>
                    @if (task.Status == "Completed" && task.DateCompleated != null)
                    {
                        @task.DateCompleated?.ToShortDateString()
                    }
                    else
                    {
                        <span>-</span>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    [Parameter] public int projectId { get; set; }

    private GetProjectDTO? project;
    private string _errorMessage = string.Empty;

    protected override void OnParametersSet()
    {
        try
        {
            project = ProjectService.GetProjectWithCriticalPath(projectId);
        }
        catch (Exception e)
        {
            _errorMessage = $"An error occurred while loading the project: {e.Message}";
        }
    }
}
