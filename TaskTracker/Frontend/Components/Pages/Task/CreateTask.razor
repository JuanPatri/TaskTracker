@using Backend.DTOs.TaskDTOs
@using Backend.Repository
@using Backend.Service
@using Backend.DTOs.ProjectDTOs

@inject SessionService Session
@inject TaskService TaskService
@inject ProjectRepository ProjectRepo

@*
@inject ProjectService ProjectService
*@

@page "/CreateTask"

<PageTitle>Create Task</PageTitle>

<form class="mb-3" @onsubmit="HandelSubmit">
    <h1>Create Task</h1>

    <div class="mb-3">
        <label for="title" class="form-label">Title</label>
        <input type="text" class="form-control" id="title" placeholder="Enter task title" @bind="_newTask.Title">
    </div>
    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea class="form-control" id="description" rows="3" placeholder="Enter task description" @bind="_newTask.Description"></textarea>
    </div>
    
    <div class="mb-3">
        <label for="duration" class="form-label">Duration</label>
        <input type="time" class="form-control" id="duration" placeholder="Enter task duration" @bind="_newTask.Duration"/>
    </div>

    <select id="project" class="form-select" @bind="_newTask.Project">
        <option value="">Select a project</option>
        @foreach (var project in _projectDtos)
        {
            <option value="falta hacer esto">@*@project.Name*@</option>
        }
    </select>




    <div class="mb-3">
        <label for="dependencies" class="form-label">Task Dependencies</label>
        <select id="dependencies" multiple class="form-select"></select>
        <div class="form-text">Hold Ctrl to select multiple tasks</div>
    </div>

    <div class="mb-3">
        <label for="resource" class="form-label">Resources</label>
        <select id="resource" multiple class="form-select"></select>
        <div class="form-text">Hold Ctrl to select multiple resources</div>
    </div>

    <button type="submit" class="btn btn-primary">Create Task</button>
</form>

@code {
    private TaskDataDTO _newTask = new TaskDataDTO();
    private List<ProjectDisplayDTO> _projectDtos = new List<ProjectDisplayDTO>();
    private string _errorMessage = string.Empty;
    private string _successMessage = string.Empty;

    protected override void OnInitialized()
    {
        if (Session.IsLoggedIn())
        {
            //_projectsDtos = ProjectService.GetProjectsForUser(Session.CurrentUser.Email);
        }
        
    }

    private async Task HandelSubmit()
    {
        try
        {
            TaskService.AddTask(_newTask);
            _successMessage = "Task created successfully!";
            _errorMessage = string.Empty;
        }
        catch (Exception ex)
        {
            _errorMessage = ex.Message;
            _successMessage = string.Empty;        }
    }
}
